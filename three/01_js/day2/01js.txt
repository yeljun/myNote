1.运算符
    1.算术运算符
       + - * / % ++ --
    2.关系运算符

    	只要是使用关系运算符比较出来的结果一定是Boolean类型
    	> >= < <= == != === !==
    	1  "10" > 5; ----true
    	2  "3"  > 5; ----false
    	   如果运算符两端由一个操作数是数字的话，那么另外一个也会通过Number()转换成数字，在进行比较
    	3  10 > 5;
    	4  "10a" > 5; false
    	    先将“10a”通过用Number()转换 返回一个NaN ，在用NaN与后面的数据比较
    	       NaN与任何数据做!=,结果是true
    	       NaN与任何数据除了!=,结果都为false

    	5  "10a" < 5; false
    	6  "张三丰" > "张无忌"
    	    比较每位字符的Unicode码
    	    先比较第一位，如果第一位相同，比较第二位
    	===：比较的数据和数据类型必须都相等的情况下，整个结果才是真
    	     "3" === 3 ----false
    	!==: 比较的数据和数据类型只要有一个不相等，整个结果就是真
    3.逻辑运算符
       运算符： ! && ||
       ! :等同于python中的not 
          对现有结果取反
          非真即假，非假即真
       && :等同于python中的and
           关联的两个条件必须同时都为真的时候整个结果才为真，否则结果为假
       || ：等同python中的or
           关联两个条件，起到或者的作用
           关联的两个条件中，只要有一个为true的话整个结果就是true，只有两个条件同时为假的时候，整个结果才为false
           创建一个网页，
           从弹框中输入一个数字，表示年份
           判断该年份是否为闰年并输出结果
           2,从弹框中录入1,个字符 判断是英文字符 中文数字
    4，位运算符
        1. 按位与：&
           使用场合，判断一个数的奇偶性
           任意数字与1做按位与操作，结果为1是奇数，结果为0 是偶数
        2，按位或：|
           使用场合：任意小数与0做按位或操作，快速取整（抛弃小数位，保留整数位）
        3，按位异或: ^
           使用场合：在不借助第三方的场合的情况下，快速的交换两个数字的位置
    5，条件运算符
       单目运算符 / 一元运算符：只有一个操作数的运算符
           如：++ -- ! typeof,-
        双目运算符 / 二元运算符：有两个操作数的运算符
           如  + - * / % && || & | ^ > < .......
        三目运算符 / 三元运算符：有三个操作数的运算符
          如 条件运算符 ? :
        语法：
           条件表达式 ? 表达式1 ：表达式2;

           先判断条件表达式的结果，如果为true,则执行表达式1的内容，否则执行表达式2的内容
        等同于python中的if 条件: 表达式1  else: 表达式2

        BIM
        从弹框数录入升高m，录入体重kg
        BMI 体重/(身高*身高)
        如果bmi小于18.5 属于偏瘦
                大于 23.9 属于偏胖
                否则正常
    6.op =    赋值运算
       a ^= b;
       b ^= a;
       a ^= b
2，流程控制
    1，程序的流程结构
        1，顺序结构
        2，分支结构
        3，循环结构
    2，分支结构
        1. if 结构
            1：
               	if (条件){
               		语句块;
               	}
               	注意：
               	    1.条件不是boolean的话，以下情况为false：
               	       0.0, 0, "", undefined, null 
               	    2,if结构可以省略{}
               	       如果省略的话，if只能控制他下面的第一条语句
            2:
                if(条件){
                	语句块1
                }else{
                	语句块2
                }
            3：多条件选择
                if (条件1) {
                	语句块1
                }else if(条件n){
                	语句块n
                }else{
 					语句块
                }

            练习
               分三次录入年月日
                计算该日是该年的多少天
        2. switch 结构
            特点：只能在等值判断的场合
            语法：
                 switch(变量){
                 	case 值1:
                 		语句块1
                 		break; //跳出switch结构 可选项
                 	case 值2：
                 	    语句块
                 	.....
                 	default:
                 	    语句块n
                 	    //当所有的case都没有匹配上的时候才能执行default语句 可选项
                 }
                 注意：
                     1.变量和各个case块后面的值，是采用 ===的方式来匹配的
                     2,如果case后面不增加break的话，则从匹配的case块开始向下执行（不判断），直到结束或者碰到break为止
    3.循环结构
       	1。循环作用
       		重复的执行相同或相似的代码
       	2.循环二要素
       	    1，循环条件
       	    2，循环操作
	    3，while 循环
	        1，语法
	           while（条件）{
	           		循环体
	           }
	           var num=100;
	           while (num>=1){
	           		console.log("Hello world!")
	           		num--
	           }
	           var i = 0;
	           while (i<100){
	           		if (i%3==0){
	           			console.log(i);
	           		}
	           		i++;
	           }
	    4.do..while 循环
	       eg. 
	         循环的从弹框中录入数据，并将录入的数据打印在控制台上，直到输入exit为止
	       2，语法：
	           do{
	               循环操作
	           }while(条件);
	        3,流程，
	            1，先执行循环操作
	            2，在判断循环条件
	            3，如果条件为真，则继续执行循环操作，否则退出循环



1.循环
    1.循环的流程控制
        1.break
            在循环体内使用，用于跳出整个循环结构
        2，continue
            在循环体内使用，用于跳出本次循环，继续执行下次循环
    2.for 循环
    	1.while 打印1-100之间所有的数
    	  var i = 1; //循环条件的初始化
    	  while (i<=100){ //循环条件的判断
    	  	console.log(i); //循环操作 
    	  	i+=1;  // 更新循环条件
    	  } 
    	2.for
    	   1.语法:
    	       for(表达式1;表达式2;表达式3;){
    	       		循环体
    	       }
    	       表达式1：//循环条件的初始化
    	       表达式2: //循环条件的判断
    	       表达式3: // 更新循环条件
    	       循环体:  //循环操作 
    	       1-100之间的数
    	       for (var i=1;i<=100;i++){
    	       		console.log(i)
    	       }
    	       流程：
    	          1，先执行表达式1，声明条件（执行1次）
    	          2，在判断表达式2的值，true或false 
    	          3，如果条件为true，则执行循环操作
    	             如果条件为false，就退出循环
    	          4	 执行循环操作后再执行表达式3
    	          5，再判断表达式的值，同步骤2
    	    2,for vs while
    	        1,相同
    	            先判断条件，在执行循环操作
    	        2，不同
    	           while 优先使用在不确定循环次数的场合下
    	           for ：优先使用在确定循环次数的场合下
    	4，循环的嵌套
    	    允许在一个循环的内部出现一个循环
    	    for (var i=1;i<=10;i++){
    	    	for (var j =1; j<=10;j++){  //内层循环

    	    	}
    	    }
*******************
2.函数
   1.什么是函数
      函数，function 是一段被定义好，并可以独立反复执行并包含多条执行语句中的代码块
   2，在js中创建函数
      function 函数名(参数){
      	函数体
      	[返回值]
      }
      参数列表:
         如果没有参数，此处为空
         如果有参数，则编写参数列表，如果有过个参数的话，各个参数之间使用“，”隔开
         有参数的函数在调用时，就要传参数，如果未传参的话，那么参数的值就是undefined
      返回值：
         在函数体内，经过运算后，需要传递给函数调用者的一个值，就是返回值
         返回值是可选的，有返回值的话，需要使用return 进行返回，最多只有一个返回值
   3，函数的调用
        在任意的js合法位置处，都允许做函数的调用
        var ret = 函数名（参数列表）;
        有参数则传递参数，否则参数列表为空
        有返回值，则可以接受返回值；如果没有返回值的话，返回值为undefind
    4.匿名函数
       1，什么是匿名函数
          匿名函数是一个没有名称的函数，该类函数会针对某一个功能而存在，不能独立声明
       2，语法：
          function（参数列表）{
          		函数体
          }
          window.onload = function(){
          	....
          }
    5,变量的作用域
       1，什么是变量的作用域
       		变量的可访问范围
       2，作用域的分类
           1，局部变量
               使用var 关键字声明在某个函数内的变量，就是局部变量
               局部变量只能在声明的函数内使用
           2，全局变量
               1，在function之外声明的变量全部都是全局变量
               2，只要不使用var关键字，全部都是全局变量
               全局变量可以应用在各个函数中
               注意：全局变量，推荐在所有的function之外使用var关键字取声明
    6,变量声明提前：
        在js中使用var声明的变量，在程序执行之前，都会被预读到作用域的顶端，但赋值还保留在原位
*******************
3，数组 --- array
	
   1.什么是数组
      数组，是一个用于批量数据的数据结构
      数组是按照线性结构来保存数据的
   2，创建数组
  		 (使用数组直接量的方式创建)
       1，创建空数组
           var 数组名 = [];
       2,创建数组并初始化数据
           var 数组名 = [元素1，元素2，元素3,....];
        （使用够着函数创建数组）
       3,创建一个空数组
           var 数组名 = new Array();
       4,创建数组并初始化数据
           var 数组名 = new Array(元素1，元素2，元素3,....)
    3，数组的使用
       获取 或设置数组的元素的值，一律使用小标
       下标是从0开始到数组元素个数-1
       var arr1 = ["东君","东皇太一","晓梦"];
       1.将数组中的第一个元素给改为 秦始皇
       arr1[0] = '秦始皇'
       2,打印出arr1数组中的第二个元素
        console.log(arr1[1])
       3,为arr1数组中的第10个元素赋值为 "盖聂"
        arr1[9]="盖聂"
    4.获取数组的长度
       属性：length
       用法：数组名.length
       使用场合：
           1，能够找到数组中要最新插入元素的位置（向数组的尾部增加新元素时使用）
           var arr1 = ["东君","东皇太一","晓梦"];
           //向arr1数组中追加新元素 - 雪女
           arr1[3]= "雪女";
           或者 arr1.length="田言";
           2，配合循环，遍历数组中的每个元素
           var arr1 = ["东君","东皇太一","晓梦"];
           for (var i=0;i<arr1.length;i++){
           		console.log(arr1[i])
           }
           for (var i = arr1.length-1;i>=0;i--){
           		console.log(arr1[i])
           }
        练习
           循环录入数据
           将书立存入数组中，直到输入退出（exit）为止（exit不存在） ，最后打印数组中的所有数据
           2，声明一个数组，存放若干人的姓名
              要求框中录入一个人的姓名，并判断该人的姓名在数组中的下标是多少
              如果存在则显示下标
              如果不存在，提示输入的数据不存在